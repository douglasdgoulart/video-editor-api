services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./scripts/create_topic.sh:/usr/bin/create_topic.sh
    command: ["/bin/bash", "-c", "chmod +x /usr/bin/create_topic.sh && /etc/confluent/docker/run & sleep 30 && /usr/bin/create_topic.sh && tail -f /dev/null"]

  api:
    build: .
    depends_on:
      - kafka
    network_mode: "host"
    environment:
      LOG_LEVEL: debug
      OUTPUT_PATH: /mnt/app/output
      INPUT_PATH: /mnt/app/input
      API_ENABLED: true
      JOB_ENABLED: false
      KAFKA_ENABLED: true
    volumes:
      - app-volume:/mnt/app/

  job:
    build: .
    depends_on:
      - kafka
    network_mode: "host"
    deploy:
      replicas: 3
    environment:
      LOG_LEVEL: debug
      OUTPUT_PATH: /mnt/app/output
      INPUT_PATH: /mnt/app/input
      API_ENABLED: false
      JOB_ENABLED: true
      JOB_WORKERS: 1
      KAFKA_ENABLED: true
    volumes:
      - app-volume:/mnt/app/

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks: 
  broker-kafka:

volumes:
  app-volume:
